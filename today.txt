[3 hours]
- [2 hours] User interface
    + Add username and score
- [1 hour] Visual effects
    + Fix death animation and remove from display list
    + Engine animation
    + Avoid particles and masks for offscreen ships

[4.5 hours expected]
- Game logic
    + [1 hour] Boundaries with reasonable spawning [done?, about 1.5 hr]
    + [30 minutes] Properly handle leave on client [doneish, about .5 hr]
	+ [30 minutes] Restrict cannon movement to 2^n positions [done, about .25 hr]
	+ [30 minutes] Cap the number of players that can connect [done, about .25 hr]
    + [30 minutes] Share coordinates of cannonball instead of when a fire occurs. [done, about .25 hr]
	+ [1 hour] Interpolate errors smoothly [done, about .75 hr]
    + [1 hour] Stupid simple AI (near random movement, fire when near)
    

[3 hours]
- Polishing and bug fixes
- Put everything in spritesheet
- Sanitize input!

OPTIONAL
- Add nickname on board
- Enforce uniqueness among nicknames
- Are messages applied in the right order on the client? I was getting weird issues with cannonballs before, where the cannonball would incorrectly fire the direction of the cannon before rotation. ACTUALLY, it is likely because state update is deferred in client ship. Is this a good idea?
- Server tests
- Client tests
- Boundary graphics
- Spike collisions
- Add proper motion to particles
- Add linear interpolation of masking for cannonball collision
- Add jagged mask
- Add cannonball explosion effect
- Add AI players
- Add visual effects for ocean
- Reimplement server in C++
- Send only relevant (in region) messages to respective players
- Use running estimate of latency to predict when movement should occur to reduce error
- Use compact messages